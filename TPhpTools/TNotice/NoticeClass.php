<?php namespace ttools; 
                                         
// PHP7/HTML5, EDGE/CHROME                              *** NoticeClass.php ***

// ****************************************************************************
// * TPhpTools               Вывести информационное сообщение, предупреждение *
// *                 или сообщение об ошибке единообразно из PHP и JavaScript *
// *                                                  через диалоги jQuery UI *
// *                                                                          *
// * v1.0, 24.01.2023                              Автор:       Труфанов В.Е. *
// * Copyright © 2022 tve                          Дата создания:  18.01.2023 *
// ****************************************************************************

/**
 * Класс --------- KwinGallery строит интерфейс для выбора некоторых символа Юникода.
 * Выборка символов осуществляется из одного из подмассивов общего массива 
 * массива $aUniCues. Подмассивы (наборы) созданы из авторских соображений и 
 * имеют свои номера и названия, так 0 - 'Знаки всякие-разные', 1 - 'Символы 
 * валют', 2 - 'Ожидаемые символы' и так далее.
 * 
 * Для взаимодействия с объектами класса должны быть определены константы:
 *
 * articleSite  - тип базы данных (по сайту)
 * pathPhpTools - путь к каталогу с файлами библиотеки прикладных классов;
 * pathPhpPrown - путь к каталогу с файлами библиотеки прикладных функции
 *    
 * Пример создания объекта класса:
 * 
 * // Указываем место размещения библиотеки прикладных функций TPhpPrown
 * define ("pathPhpPrown",$SiteHost.'/TPhpPrown/TPhpPrown');
 * // Указываем место размещения библиотеки прикладных классов TPhpTools
 * define ("pathPhpTools",$SiteHost.'/TPhpTools/TPhpTools');
 * // Указываем тип базы данных (по сайту) для управления классом ArticlesMaker
 * define ("articleSite",'IttveMe'); 
 * // Cоздаем объект для управления изображениями в галерее, связанной с 
 * // материалами сайта из базы данных
 * $Galli=new ttools\KwinGallery(gallidir,$nym,$pid,$uid);
**/

// Свойства:
//
// --- $FltLead - команда управления передачей данных. По умолчанию fltNotTransmit,
//            то есть данные о загрузке не передаются для контроля ни в кукисы, 
// ни в консоль, а только записываются в LocalStorage. Если LocalStorage,
// браузером не поддерживается, то данные будут записываться в кукисы при 
// установке свойства $FltLead в значение fltSendCookies или fltAll 
// $Page - название страницы сайта;
// $Uagent - браузер пользователя;

// Подгружаем нужные модули библиотеки прикладных функций
// require_once pathPhpPrown."/CommonPrown.php";
// Подгружаем нужные модули библиотеки прикладных классов
// require_once pathPhpTools."/TArticlesMaker/ArticlesMakerClass.php";

// Возможные типы сообщений
define ("Error",   1);
define ("Info",    2);
define ("Warning", 3);

class Notice
{
   // ----------------------------------------------------- СВОЙСТВА КЛАССА ---
   protected $typemenu;  // Тип меню (для ittve.me или kwintiny)
   protected $urlHome;   // Начальная страница сайта 
   // ------------------------------------------------------- МЕТОДЫ КЛАССА ---
   public function __construct() 
   {
      // Инициализируем свойства класса
      //$this->typemenu=$typemenu; 
      //$this->urlHome=$urlHome; 

      // Трассируем установленные свойства
      //\prown\ConsoleLog('$this->typemenu='.$this->typemenu); 
      //\prown\ConsoleLog('$this->urlHome='.$this->urlHome); 
      //\prown\ConsoleLog('$this->cPreMe='.$this->cPreMe); 
   }
   public function __destruct() 
   {
   }

   // *************************************************************************
   // *                 Проинициализировать стили объекта                     *
   // *        (выполнить действия в области <head></head> страницы)          *
   // *************************************************************************
   public function Init() 
   {
      ?> 
      <script>
      $(document).ready(function()
      {
         // Создаем окно для сообщений
         noticediv=document.createElement('div');
         noticediv.className="dialog_window";
         noticediv.innerHTML="<p>Привет, мир!</p>";
         noticediv.id="DialogWind";
         document.body.append(noticediv);
      })
      </script>
      <?php
   }
   // *************************************************************************
   // *                     Вывести информационное сообщение                  *
   // *************************************************************************
   public function Info($messa)
   {
   }
   // *************************************************************************
   // *                         Вывести сообщение об ошибке                   *
   // *************************************************************************
   private function Error($messa)
   {
   }
   // *************************************************************************
   // *                             Вывести предупреждение                    *
   // *************************************************************************
   private function Warning($messa)
   {
   }

   // --------------------------------------------------- ВНУТРЕННИЕ МЕТОДЫ ---

} 

// ******************************************************** NoticeClass.php ***
